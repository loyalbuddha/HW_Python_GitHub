'''
    Реализовать структуру "Рейтинг",
    представляющую собой не возрастающий набор натуральных чисел.
    У пользователя необходимо запрашивать новый элемент рейтинга.
    Если в рейтинге существуют элементы с одинаковыми значениями,
    то новый элемент с тем же значением должен разместиться после них.
'''
'''
    Да простит автор задачи, я усовершенствую её условие.
    Заранее скажу, почему я так решил. Я не понимаю, как можно отличить "3" от "3" и понять
    по интерфейсу, не заглядывая в код, что "3" встало после "3", а не перед ней. Моё условие
    эту проблему решает тем, что вводит ещё одно поле, по наполнению которого можно это сделать.
    Так вот.
    Пусть теперь вводятся ФИО спортсмена-бегуна (или его уникальный ID) на 100 м.
    Затем вводится время, за которое он пробежал 100 м.
    Затем выстраивается рейтинг по числовым результатам, в рейтинге показываются не числа, а ФИО.
    (можно было сделать про рейтинг Форбс, то там одинаковых чисел не бывает
    (в беге тоже, но мы будем считать, что приборы измерения древнегреческие и с большой погрешностью,
    позволяющей говорить про одновременность прибытия спортсменов к финишной черте))
'''

# У пользователя необходимо запрашивать новый элемент рейтинга.
# чтобы это происходило не бесконечно ограничим структуру длиной
# а длину тем, что это int-число
while True:
    my_list_len = input('Введите число участников сорвенований: ')
    try:
        my_list_len = int(my_list_len)
        break
    except ValueError:
        print('Таки нужно не что-то там, а целое число участников сорвенований.')
        
my_list = [7,5,3,3,2] #пусть уже будет предустановлен непустой список

''' Реализация продвинутого условия '''
my_dict = {'Томас Бёрк':12.00,'Реджинальд Уолкер':10.80,'Иванов':11,'Киселёв':7}

for i in range(1,my_list_len+1):
    new_person = input(f'Введите ФИО {i}-го участника сорвенований: ')
    while True:
        new_number = input('Введите, за какое время пробежал 100 метров {i}-й участник соревнования: ')
        try:
            new_number = int(new_number)
            break
        except ValueError:
            print('Таки нужно не что-то там, а число.')
    my_dict[new_person] = new_number
    list_d = list(my_dict.items()) # долго пытался понять, как сортировать по значению словаря и выдавать ключи, в итоге загуглил, что проще это делать через создание списков (ключ,значение)
    list_d.sort(key=lambda i: i[1])
    list_c = []
    for i in list_d:
        list_c.append(i[0])
    print(f'Рейтинг:\n{list_c}')

''' Реализация обычного условия '''
for i in range(my_list_len):
    while True:
        new_number = input(f'Введите позицию {i}-го участника соревнования: ')
        try:
            new_number = int(new_number)
            break
        except ValueError:
            print('Таки нужно не что-то там, а число.')           
    my_list.append(new_number)
    my_list.sort(reverse = True)
    print(f'Текущий рейтинг: {my_list}')